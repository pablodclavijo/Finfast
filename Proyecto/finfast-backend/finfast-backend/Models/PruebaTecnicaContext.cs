// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using finfast_backend.Models;

namespace finfast_backend.Models;

public partial class PruebaTecnicaContext : DbContext
{
    public PruebaTecnicaContext(DbContextOptions<PruebaTecnicaContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Ciudad> Ciudads { get; set; }

    public virtual DbSet<Comuna> Comunas { get; set; }

    public virtual DbSet<Persona> Personas { get; set; }

    public virtual DbSet<Region> Regions { get; set; }

    public virtual DbSet<Sexo> Sexos { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Ciudad>(entity =>
        {
            entity.HasOne(d => d.RegionCodigoNavigation).WithMany(p => p.Ciudads)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Ciudad_Region");
        });

        modelBuilder.Entity<Comuna>(entity =>
        {
            entity.HasOne(d => d.Ciudad).WithMany(p => p.Comunas)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Comuna_Ciudad");
        });

        modelBuilder.Entity<Persona>(entity =>
        {
            entity.Property(e => e.Id).HasDefaultValueSql("(newid())");
            entity.Property(e => e.Nombre).HasComputedColumnSql("(CONVERT([varchar](95),(((rtrim(ltrim([ApellidoPaterno]))+' ')+isnull(rtrim(ltrim([ApellidoMaterno])),''))+', ')+rtrim(ltrim([Nombres])),(0)))", false);
            entity.Property(e => e.Run).HasComputedColumnSql("(CONVERT([varchar],([dbo].[FormatInt]([RunCuerpo])+'-')+[RunDigito],(0)))", false);
            entity.Property(e => e.RunDigito).IsFixedLength();

            entity.HasOne(d => d.SexoCodigoNavigation).WithMany(p => p.Personas)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Persona_Sexo");

            entity.HasOne(d => d.Comuna).WithMany(p => p.Personas).HasConstraintName("FK_Persona_Comuna");
            entity.ToTable(e => { e.HasTrigger("Nombre"); e.HasTrigger("Run"); });
        });

        modelBuilder.Entity<Region>(entity =>
        {
            entity.Property(e => e.Codigo).ValueGeneratedNever();
        });

        modelBuilder.Entity<Sexo>(entity =>
        {
            entity.Property(e => e.Codigo).ValueGeneratedNever();
            entity.Property(e => e.Letra).IsFixedLength();
        });

        OnModelCreatingGeneratedFunctions(modelBuilder);
        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}